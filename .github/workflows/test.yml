name: Run Tests

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]
    paths-ignore:
      - '**/*.yaml'
      - '**/*.yml'
      - '**/*.md'
      - '**/*.txt'
      - '**/*.json'
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.yaml'
      - '**/*.yml'
      - '**/*.md'
      - '**/*.txt'
      - '**/*.json'

env:
  CARGO_TERM_COLOR: always

jobs:
  frontend-tests:
    runs-on: ubicloud-standard-8
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install Node.js dependencies
      run: npm ci

    - name: Run type check
      run: npm run type-check

    - name: Run frontend tests
      run: npm test

  backend-tests:
    runs-on: ubicloud-standard-8
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev

    - name: Install Node.js dependencies
      run: npm ci

    - name: Build frontend
      run: npm run build

    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          src-tauri/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Run backend tests
      run: cd src-tauri && cargo test

    - name: Run Cargo check
      run: cd src-tauri && cargo check